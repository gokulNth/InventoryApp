{"ast":null,"code":"import _objectSpread from \"D:\\\\firebase-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\firebase-app\\\\src\\\\Components\\\\Pages\\\\Dashboard.js\";\nimport React from 'react';\nimport { fetch } from '../../Fetches';\nimport Homepage from '../Layouts/Homepage';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.check = () => {\n      this.fetchData();\n    };\n\n    this.fetchData = async () => {\n      let a = await fetch();\n      await console.log('fetch_over');\n      await a.forEach(async doc => {\n        await this.state.products.push(_objectSpread({}, doc.data(), {\n          id: doc.id\n        }));\n      });\n      (await this.state.products.length) !== 0 && this.setState({\n        isloading: ''\n      });\n      (await console.log(this.state.products.sort((a, b) => b.Avail - a.Avail).reverse())(( // (await this.setState({\n      //   products: this.state.products.sort((a, b) => b.Avail - a.Avail).reverse()}))\n      await a.size))) === 0 && this.setState({\n        isloading: 'serverError'\n      });\n      (await this.state.isloading) === 'serverError' && this.check();\n    };\n\n    this.one = async e => {\n      let name = e.target.name;\n      let num = +e.target.id;\n\n      if (this.state.selected_items[name].req + num > this.state.products.filter(i => i.Name === name).map(i => i.Avail)[0]) {\n        alert('Quantity Exceeded');\n      } else if (!(this.state.selected_items[name].req + num < 0)) {\n        if (this.state.selected_items[name].req + num === 0) {\n          this.delete(e);\n        }\n\n        let a = Object.assign({}, this.state.selected_items, _objectSpread({}, this.state.selected_items, {\n          [name]: _objectSpread({}, this.state.selected_items[name], {\n            req: this.state.selected_items[name].req + num,\n            totPrice: +this.state.products.filter(i => i.Name === name).map(i => i.Price)[0] * (this.state.selected_items[name].req + num)\n          })\n        }));\n        await this.setState({\n          selected_items: a\n        });\n        await this.tot();\n      }\n    };\n\n    this.add = async e => {\n      let a = await e.target.id;\n      let item = await this.state.products.filter(i => i.Name === a);\n\n      if (a !== '' && item[0].Avail > 0) {\n        if (!this.state.items.includes(a)) {\n          this.setState(prev => {\n            return {\n              selected_items: _objectSpread({}, prev.selected_items, {\n                [a]: {\n                  req: 1,\n                  totavail: +item.map(i => i.Avail)[0],\n                  id: this.state.products.filter(i => i.Name === a).map(i => i.id)[0],\n                  totPrice: +item.map(i => i.Price)[0],\n                  price: +item.map(i => i.Price)[0]\n                }\n              })\n            };\n          });\n          await this.setState({\n            items: [...this.state.items, a]\n          });\n          await this.tot();\n          await this.setState({\n            list: []\n          });\n        }\n      } else alert('select valid product');\n    };\n\n    this.tot = () => {\n      let a = this.state.items.length !== 0 ? this.state.items.map(i => {\n        return this.state.selected_items[i].totPrice;\n      }).reduce(this.summation) : 0;\n      this.setState({\n        totPrice: a\n      });\n    };\n\n    this.delete = async e => {\n      let name = e.target.id;\n      let res = Object.assign({}, this.state.selected_items);\n      delete res[name];\n      await this.setState({\n        items: this.state.items.filter(i => i !== name)\n      });\n      await this.setState({\n        selected_items: res\n      });\n      await this.tot();\n    };\n\n    this.summation = (a, b) => a + b;\n\n    this.search = e => {\n      let list = [];\n      this.state.products.filter(i => i.Name.toLowerCase().includes(e.target.value)).map(i => {\n        return list.push(i);\n      });\n      e.target.value.length !== 0 && this.setState({\n        list: list\n      });\n      e.target.value.length === 0 && this.setState({\n        list: []\n      });\n    };\n\n    this.state = {\n      products: [],\n      selected_items: [],\n      items: [],\n      totPrice: 0,\n      isloading: 'Loading...',\n      list: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.location.state && this.setState({\n      selected_items: this.props.location.state.selected_items,\n      items: this.props.location.state.items,\n      totPrice: this.props.location.state.totPrice\n    });\n    this.fetchData();\n  }\n\n  render() {\n    return React.createElement(Homepage, {\n      state: this.state,\n      add: this.add,\n      tot: this.tot,\n      delete: this.delete,\n      one: this.one,\n      search: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["D:\\firebase-app\\src\\Components\\Pages\\Dashboard.js"],"names":["React","fetch","Homepage","Dashboard","Component","constructor","props","check","fetchData","a","console","log","forEach","doc","state","products","push","data","id","length","setState","isloading","sort","b","Avail","reverse","size","one","e","name","target","num","selected_items","req","filter","i","Name","map","alert","delete","Object","assign","totPrice","Price","tot","add","item","items","includes","prev","totavail","price","list","reduce","summation","res","search","toLowerCase","value","componentDidMount","location","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { fetch } from '../../Fetches';\r\nimport Homepage from '../Layouts/Homepage';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [],\r\n      selected_items: [],\r\n      items: [],\r\n      totPrice: 0,\r\n      isloading: 'Loading...',\r\n      list: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.location.state &&\r\n      this.setState({\r\n        selected_items: this.props.location.state.selected_items,\r\n        items: this.props.location.state.items,\r\n        totPrice: this.props.location.state.totPrice\r\n      });\r\n    this.fetchData();\r\n  }\r\n  check = () => {\r\n    this.fetchData();\r\n  };\r\n  fetchData = async () => {\r\n    let a = await fetch();\r\n    await console.log('fetch_over');\r\n    await a.forEach(async doc => {\r\n      await this.state.products.push({ ...doc.data(), id: doc.id });\r\n    });\r\n    (await this.state.products.length) !== 0 &&\r\n      this.setState({ isloading: '' });\r\n    (await console.log(\r\n      this.state.products.sort((a, b) => b.Avail - a.Avail).reverse()\r\n    )(\r\n      // (await this.setState({\r\n      //   products: this.state.products.sort((a, b) => b.Avail - a.Avail).reverse()}))\r\n      await a.size\r\n    )) === 0 && this.setState({ isloading: 'serverError' });\r\n    (await this.state.isloading) === 'serverError' && this.check();\r\n  };\r\n  one = async e => {\r\n    let name = e.target.name;\r\n    let num = +e.target.id;\r\n    if (\r\n      this.state.selected_items[name].req + num >\r\n      this.state.products.filter(i => i.Name === name).map(i => i.Avail)[0]\r\n    ) {\r\n      alert('Quantity Exceeded');\r\n    } else if (!(this.state.selected_items[name].req + num < 0)) {\r\n      if (this.state.selected_items[name].req + num === 0) {\r\n        this.delete(e);\r\n      }\r\n      let a = Object.assign({}, this.state.selected_items, {\r\n        ...this.state.selected_items,\r\n        [name]: {\r\n          ...this.state.selected_items[name],\r\n          req: this.state.selected_items[name].req + num,\r\n          totPrice:\r\n            +this.state.products\r\n              .filter(i => i.Name === name)\r\n              .map(i => i.Price)[0] *\r\n            (this.state.selected_items[name].req + num)\r\n        }\r\n      });\r\n      await this.setState({ selected_items: a });\r\n      await this.tot();\r\n    }\r\n  };\r\n  add = async e => {\r\n    let a = await e.target.id;\r\n    let item = await this.state.products.filter(i => i.Name === a);\r\n    if (a !== '' && item[0].Avail > 0) {\r\n      if (!this.state.items.includes(a)) {\r\n        this.setState(prev => {\r\n          return {\r\n            selected_items: {\r\n              ...prev.selected_items,\r\n              [a]: {\r\n                req: 1,\r\n                totavail: +item.map(i => i.Avail)[0],\r\n                id: this.state.products\r\n                  .filter(i => i.Name === a)\r\n                  .map(i => i.id)[0],\r\n                totPrice: +item.map(i => i.Price)[0],\r\n                price: +item.map(i => i.Price)[0]\r\n              }\r\n            }\r\n          };\r\n        });\r\n        await this.setState({\r\n          items: [...this.state.items, a]\r\n        });\r\n        await this.tot();\r\n        await this.setState({ list: [] });\r\n      }\r\n    } else alert('select valid product');\r\n  };\r\n  tot = () => {\r\n    let a =\r\n      this.state.items.length !== 0\r\n        ? this.state.items\r\n            .map(i => {\r\n              return this.state.selected_items[i].totPrice;\r\n            })\r\n            .reduce(this.summation)\r\n        : 0;\r\n    this.setState({ totPrice: a });\r\n  };\r\n  delete = async e => {\r\n    let name = e.target.id;\r\n    let res = Object.assign({}, this.state.selected_items);\r\n    delete res[name];\r\n    await this.setState({ items: this.state.items.filter(i => i !== name) });\r\n    await this.setState({ selected_items: res });\r\n    await this.tot();\r\n  };\r\n  summation = (a, b) => a + b;\r\n  search = e => {\r\n    let list = [];\r\n    this.state.products\r\n      .filter(i => i.Name.toLowerCase().includes(e.target.value))\r\n      .map(i => {\r\n        return list.push(i);\r\n      });\r\n    e.target.value.length !== 0 && this.setState({ list: list });\r\n    e.target.value.length === 0 && this.setState({ list: [] });\r\n  };\r\n  render() {\r\n    return (\r\n      <Homepage\r\n        state={this.state}\r\n        add={this.add}\r\n        tot={this.tot}\r\n        delete={this.delete}\r\n        one={this.one}\r\n        search={this.search}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}