{"ast":null,"code":"import _objectSpread from \"D:\\\\firebase-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase';\nimport { generate } from 'shortid';\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAMXvz4AD4bx1NvJchOugf1uYvPhf8xBiA',\n  authDomain: 'test-1528871171306.firebaseapp.com',\n  databaseURL: 'https://test-1528871171306.firebaseio.com',\n  projectId: 'test-1528871171306',\n  storageBucket: 'test-1528871171306.appspot.com',\n  messagingSenderId: '791882157170',\n  appId: '1:791882157170:web:093a1485e8da828a'\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nvar firestore = firebase.firestore();\nconst docRef = firestore.collection('Products');\n\nconst fetch = async () => {\n  return await docRef.get().then(async querySnapshot => {\n    return await querySnapshot;\n  }).catch(err => {\n    console.error('Error Occured', err);\n    return err;\n  });\n};\n\nconst addnew = async (state, push) => {\n  let data = {\n    Avail: state.Avail,\n    DetailAvail_ltd: {\n      [new Date().toDateString().slice(4)]: state.Avail\n    },\n    Name: state.Name,\n    Price: state.Price,\n    Wnt_ltd: state.wanted,\n    pcs_per_Box: state.perBox,\n    MRP: state.MRP\n  };\n  await docRef.doc(generate()).set(data);\n  await push('/');\n};\n\nconst remove = async (state, date) => {\n  let b = await docRef.doc(state.id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  });\n  let q = await Object.assign({}, b, _objectSpread({}, b, {\n    Avail: b.Avail - b.DetailAvail_ltd[date]\n  }));\n  delete q.DetailAvail_ltd[Object.keys(q.DetailAvail_ltd)];\n  console.log(q.DetailAvail_ltd[1]); // await docRef.doc(state.id).update('Avail', q.Avail);\n  // await docRef.doc(state.id).update('DetailAvail_ltd', q.DetailAvail_ltd);\n  // return await Object.assign({}, state, {\n  //   ...state,\n  //   num: 0,\n  //   Price: await q.Price,\n  //   DetailAvail_ltd: await q.DetailAvail_ltd,\n  //   Avail: await q.Avail\n  // });\n};\n\nconst fetchDetailAvail = async id => {\n  return await docRef.doc(id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  });\n};\n\nconst add = async state => {\n  if (state.num !== '') {\n    let data = {\n      [state.date]: +state.num\n    };\n    let b = await docRef.doc(state.id).get().then(async querySnapshot => {\n      return await querySnapshot.data();\n    });\n    let bDetailAvail_ltd = b.DetailAvail_ltd;\n\n    if (Object.keys(bDetailAvail_ltd).length === 5) {\n      let ele = Object.keys(bDetailAvail_ltd)[4];\n      delete bDetailAvail_ltd[ele];\n    }\n\n    bDetailAvail_ltd = Object.assign({}, bDetailAvail_ltd, _objectSpread({}, bDetailAvail_ltd, data));\n    await docRef.doc(state.id).update('DetailAvail_ltd', bDetailAvail_ltd);\n    await docRef.doc(state.id).update('Avail', b.Avail + +state.num);\n  }\n\n  await docRef.doc(state.id).update('Wnt_ltd', +state.wanted);\n  await docRef.doc(state.id).update('perBox', +state.perBox);\n  await docRef.doc(state.id).update('MRP', +state.MRP);\n  let new1 = await docRef.doc(state.id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  });\n  return await Object.assign({}, state, {\n    Price: new1.Price,\n    num: 0,\n    Avail: new1.Avail,\n    DetailAvail_ltd: new1.DetailAvail_ltd,\n    MRP: new1.MRP\n  });\n};\n\nconst update = async (props, state) => {\n  props && console.log(props);\n  state && (await state.items.map(async i => {\n    return await docRef.doc(state.selected_items[i].id).update('Avail', state.selected_items[i].totavail - state.selected_items[i].req);\n  }));\n};\n\nexport { fetch, update, add, fetchDetailAvail, addnew, remove };","map":{"version":3,"sources":["D:\\firebase-app\\src\\Fetches\\Fetches.js"],"names":["firebase","generate","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","firestore","docRef","collection","fetch","get","then","querySnapshot","catch","err","console","error","addnew","state","push","data","Avail","DetailAvail_ltd","Date","toDateString","slice","Name","Price","Wnt_ltd","wanted","pcs_per_Box","perBox","MRP","doc","set","remove","date","b","id","q","Object","assign","keys","log","fetchDetailAvail","add","num","bDetailAvail_ltd","length","ele","update","new1","props","items","map","i","selected_items","totavail","req"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\r\nimport { generate } from 'shortid';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyAMXvz4AD4bx1NvJchOugf1uYvPhf8xBiA',\r\n  authDomain: 'test-1528871171306.firebaseapp.com',\r\n  databaseURL: 'https://test-1528871171306.firebaseio.com',\r\n  projectId: 'test-1528871171306',\r\n  storageBucket: 'test-1528871171306.appspot.com',\r\n  messagingSenderId: '791882157170',\r\n  appId: '1:791882157170:web:093a1485e8da828a'\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nvar firestore = firebase.firestore();\r\nconst docRef = firestore.collection('Products');\r\n\r\nconst fetch = async () => {\r\n  return await docRef\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot;\r\n    })\r\n    .catch(err => {\r\n      console.error('Error Occured', err);\r\n      return err;\r\n    });\r\n};\r\n\r\nconst addnew = async (state, push) => {\r\n  let data = {\r\n    Avail: state.Avail,\r\n    DetailAvail_ltd: { [new Date().toDateString().slice(4)]: state.Avail },\r\n    Name: state.Name,\r\n    Price: state.Price,\r\n    Wnt_ltd: state.wanted,\r\n    pcs_per_Box: state.perBox,\r\n    MRP: state.MRP\r\n  };\r\n  await docRef.doc(generate()).set(data);\r\n  await push('/');\r\n};\r\nconst remove = async (state, date) => {\r\n  let b = await docRef\r\n    .doc(state.id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n  let q = await Object.assign({}, b, {\r\n    ...b,\r\n    Avail: b.Avail - b.DetailAvail_ltd[date]\r\n  });\r\n  delete q.DetailAvail_ltd[Object.keys(q.DetailAvail_ltd)];\r\n  console.log(q.DetailAvail_ltd[1]);\r\n  // await docRef.doc(state.id).update('Avail', q.Avail);\r\n  // await docRef.doc(state.id).update('DetailAvail_ltd', q.DetailAvail_ltd);\r\n  // return await Object.assign({}, state, {\r\n  //   ...state,\r\n  //   num: 0,\r\n  //   Price: await q.Price,\r\n  //   DetailAvail_ltd: await q.DetailAvail_ltd,\r\n  //   Avail: await q.Avail\r\n  // });\r\n};\r\nconst fetchDetailAvail = async id => {\r\n  return await docRef\r\n    .doc(id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n};\r\n\r\nconst add = async state => {\r\n  if (state.num !== '') {\r\n    let data = { [state.date]: +state.num };\r\n    let b = await docRef\r\n      .doc(state.id)\r\n      .get()\r\n      .then(async querySnapshot => {\r\n        return await querySnapshot.data();\r\n      });\r\n    let bDetailAvail_ltd = b.DetailAvail_ltd;\r\n    if (Object.keys(bDetailAvail_ltd).length === 5) {\r\n      let ele = Object.keys(bDetailAvail_ltd)[4];\r\n      delete bDetailAvail_ltd[ele];\r\n    }\r\n    bDetailAvail_ltd = Object.assign({}, bDetailAvail_ltd, {\r\n      ...bDetailAvail_ltd,\r\n      ...data\r\n    });\r\n    await docRef.doc(state.id).update('DetailAvail_ltd', bDetailAvail_ltd);\r\n    await docRef.doc(state.id).update('Avail', b.Avail + +state.num);\r\n  }\r\n  await docRef.doc(state.id).update('Wnt_ltd', +state.wanted);\r\n  await docRef.doc(state.id).update('perBox', +state.perBox);\r\n  await docRef.doc(state.id).update('MRP', +state.MRP);\r\n  let new1 = await docRef\r\n    .doc(state.id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n  return await Object.assign({}, state, {\r\n    Price: new1.Price,\r\n    num: 0,\r\n    Avail: new1.Avail,\r\n    DetailAvail_ltd: new1.DetailAvail_ltd,\r\n    MRP: new1.MRP\r\n  });\r\n};\r\n\r\nconst update = async (props, state) => {\r\n  props && console.log(props);\r\n  state &&\r\n    (await state.items.map(async i => {\r\n      return await docRef\r\n        .doc(state.selected_items[i].id)\r\n        .update(\r\n          'Avail',\r\n          state.selected_items[i].totavail - state.selected_items[i].req\r\n        );\r\n    }));\r\n};\r\n\r\nexport { fetch, update, add, fetchDetailAvail, addnew, remove };\r\n"]},"metadata":{},"sourceType":"module"}