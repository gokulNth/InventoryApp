{"ast":null,"code":"import _objectSpread from \"D:\\\\firebase-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAMXvz4AD4bx1NvJchOugf1uYvPhf8xBiA',\n  authDomain: 'test-1528871171306.firebaseapp.com',\n  databaseURL: 'https://test-1528871171306.firebaseio.com',\n  projectId: 'test-1528871171306',\n  storageBucket: 'test-1528871171306.appspot.com',\n  messagingSenderId: '791882157170',\n  appId: '1:791882157170:web:093a1485e8da828a'\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nvar firestore = firebase.firestore();\nconst docRef = firestore.collection('Products');\n\nconst fetch = async () => {\n  return await docRef.get().then(async querySnapshot => {\n    return await querySnapshot;\n  }).catch(err => {\n    console.error('Error Occured', err);\n    return err;\n  });\n};\n\nconst addnew = async (state, push) => {\n  let a = 0;\n  await docRef.get().then(async querySnapshot => {\n    await querySnapshot.forEach(async doc => {\n      a = await +doc.id;\n    });\n  });\n  await ++a;\n  let data = {\n    Avail: state.Avail,\n    DetailAvail_ltd: {\n      [new Date().toDateString().slice(4)]: state.Avail\n    },\n    Name: state.Name,\n    Price: state.Price,\n    Wnt_ltd: state.wanted,\n    pcs_per_Box: state.perBox\n  };\n  await docRef.doc(a.toString()).set(data);\n  await push('/');\n};\n\nconst remove = async (state, date) => {\n  let b = await docRef.doc(state.id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  }); // let q = await Object.assign({}, b, {\n  //   ...b,\n  //   Avail: b.Avail - b.DetailAvail[date]\n  // });\n\n  if (Object.keys(b.DetailAvail_ltd).length === 5) {\n    let ele = Object.keys(b.DetailAvail_ltd)[Object.keys(b.DetailAvail_ltd).length - 1];\n    delete b.DetailAvail_ltd[ele];\n  }\n\n  await docRef.doc(state.id).update('Avail', b.Avail - b.DetailAvail_ltd[date]); // let a = await Object.assign({}, q.DetailAvail, delete q.DetailAvail[date]);\n  // await docRef.doc(state.id).update('DetailAvail', a);\n\n  await docRef.doc(state.id).update('DetailAvail_ltd', b.DetailAvail_ltd);\n  return await Object.assign({}, state, {\n    Price: await docRef.doc(state.id).get().then(async querySnapshot => {\n      return await querySnapshot.data().Price;\n    }),\n    num: 0,\n    Avail: await docRef.doc(state.id).get().then(async querySnapshot => {\n      return await querySnapshot.data().Avail;\n    })\n  });\n};\n\nconst fetchDetailAvail = async state => {\n  return await docRef.doc(state.id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  });\n};\n\nconst add = async state => {\n  let a = await docRef.doc(state.id).get().then(async querySnapshot => {\n    return await querySnapshot.data().Avail;\n  });\n  let data = {\n    [state.date]: state.num\n  };\n  let b = await docRef.doc(state.id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  });\n  let bDetailAvail_ltd = b.DetailAvail_ltd;\n  let c = await _objectSpread({}, b.DetailAvail, data);\n\n  if (Object.keys(bDetailAvail_ltd).length === 5) {\n    let ele = Object.keys(bDetailAvail_ltd)[0];\n    delete bDetailAvail_ltd[ele];\n  }\n\n  bDetailAvail_ltd = Object.assign({}, bDetailAvail_ltd, _objectSpread({}, bDetailAvail_ltd, data));\n  await docRef.doc(state.id).update('DetailAvail', c);\n  await docRef.doc(state.id).update('DetailAvail_ltd', bDetailAvail_ltd);\n  await docRef.doc(state.id).update('Avail', a + +state.num);\n  return await Object.assign({}, state, {\n    Price: await docRef.doc(state.id).get().then(async querySnapshot => {\n      return await querySnapshot.data().Price;\n    }),\n    num: 0,\n    DetailAvail: await docRef.doc(state.id).get().then(async querySnapshot => {\n      return await querySnapshot.data().DetailAvail;\n    }),\n    Avail: await docRef.doc(state.id).get().then(async querySnapshot => {\n      return await querySnapshot.data().Avail;\n    }),\n    DetailAvail_ltd: await docRef.doc(state.id).get().then(async querySnapshot => {\n      return await querySnapshot.data().DetailAvail_ltd;\n    })\n  });\n};\n\nconst update = async (state, push) => {\n  state.all.map(async i => {\n    return await docRef.doc(state.item[i].id).update('Avail', state.item[i].totavail - state.item[i].req).then(push('/'));\n  });\n};\n\nexport { fetch, update, add, fetchDetailAvail, addnew, remove };","map":{"version":3,"sources":["D:\\firebase-app\\src\\Fetches\\Fetches.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","firestore","docRef","collection","fetch","get","then","querySnapshot","catch","err","console","error","addnew","state","push","a","forEach","doc","id","data","Avail","DetailAvail_ltd","Date","toDateString","slice","Name","Price","Wnt_ltd","wanted","pcs_per_Box","perBox","toString","set","remove","date","b","Object","keys","length","ele","update","assign","num","fetchDetailAvail","add","bDetailAvail_ltd","c","DetailAvail","all","map","i","item","totavail","req"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyAMXvz4AD4bx1NvJchOugf1uYvPhf8xBiA',\r\n  authDomain: 'test-1528871171306.firebaseapp.com',\r\n  databaseURL: 'https://test-1528871171306.firebaseio.com',\r\n  projectId: 'test-1528871171306',\r\n  storageBucket: 'test-1528871171306.appspot.com',\r\n  messagingSenderId: '791882157170',\r\n  appId: '1:791882157170:web:093a1485e8da828a'\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nvar firestore = firebase.firestore();\r\nconst docRef = firestore.collection('Products');\r\n\r\nconst fetch = async () => {\r\n  return await docRef\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot;\r\n    })\r\n    .catch(err => {\r\n      console.error('Error Occured', err);\r\n      return err;\r\n    });\r\n};\r\n\r\nconst addnew = async (state, push) => {\r\n  let a = 0;\r\n  await docRef.get().then(async querySnapshot => {\r\n    await querySnapshot.forEach(async doc => {\r\n      a = await +doc.id;\r\n    });\r\n  });\r\n  await ++a;\r\n  let data = {\r\n    Avail: state.Avail,\r\n    DetailAvail_ltd: { [new Date().toDateString().slice(4)]: state.Avail },\r\n    Name: state.Name,\r\n    Price: state.Price,\r\n    Wnt_ltd: state.wanted,\r\n    pcs_per_Box: state.perBox\r\n  };\r\n  await docRef.doc(a.toString()).set(data);\r\n  await push('/');\r\n};\r\nconst remove = async (state, date) => {\r\n  let b = await docRef\r\n    .doc(state.id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n  // let q = await Object.assign({}, b, {\r\n  //   ...b,\r\n  //   Avail: b.Avail - b.DetailAvail[date]\r\n  // });\r\n  if (Object.keys(b.DetailAvail_ltd).length === 5) {\r\n    let ele = Object.keys(b.DetailAvail_ltd)[\r\n      Object.keys(b.DetailAvail_ltd).length - 1\r\n    ];\r\n    delete b.DetailAvail_ltd[ele];\r\n  }\r\n  await docRef.doc(state.id).update('Avail', b.Avail - b.DetailAvail_ltd[date]);\r\n  // let a = await Object.assign({}, q.DetailAvail, delete q.DetailAvail[date]);\r\n  // await docRef.doc(state.id).update('DetailAvail', a);\r\n  await docRef.doc(state.id).update('DetailAvail_ltd', b.DetailAvail_ltd);\r\n  return await Object.assign({}, state, {\r\n    Price: await docRef\r\n      .doc(state.id)\r\n      .get()\r\n      .then(async querySnapshot => {\r\n        return await querySnapshot.data().Price;\r\n      }),\r\n    num: 0,\r\n    Avail: await docRef\r\n      .doc(state.id)\r\n      .get()\r\n      .then(async querySnapshot => {\r\n        return await querySnapshot.data().Avail;\r\n      })\r\n  });\r\n};\r\nconst fetchDetailAvail = async state => {\r\n  return await docRef\r\n    .doc(state.id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n};\r\n\r\nconst add = async state => {\r\n  let a = await docRef\r\n    .doc(state.id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data().Avail;\r\n    });\r\n  let data = { [state.date]: state.num };\r\n  let b = await docRef\r\n    .doc(state.id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n  let bDetailAvail_ltd = b.DetailAvail_ltd;\r\n  let c = await { ...b.DetailAvail, ...data };\r\n  if (Object.keys(bDetailAvail_ltd).length === 5) {\r\n    let ele = Object.keys(bDetailAvail_ltd)[0];\r\n    delete bDetailAvail_ltd[ele];\r\n  }\r\n  bDetailAvail_ltd = Object.assign({}, bDetailAvail_ltd, {\r\n    ...bDetailAvail_ltd,\r\n    ...data\r\n  });\r\n  await docRef.doc(state.id).update('DetailAvail', c);\r\n  await docRef.doc(state.id).update('DetailAvail_ltd', bDetailAvail_ltd);\r\n  await docRef.doc(state.id).update('Avail', a + +state.num);\r\n  return await Object.assign({}, state, {\r\n    Price: await docRef\r\n      .doc(state.id)\r\n      .get()\r\n      .then(async querySnapshot => {\r\n        return await querySnapshot.data().Price;\r\n      }),\r\n    num: 0,\r\n    DetailAvail: await docRef\r\n      .doc(state.id)\r\n      .get()\r\n      .then(async querySnapshot => {\r\n        return await querySnapshot.data().DetailAvail;\r\n      }),\r\n    Avail: await docRef\r\n      .doc(state.id)\r\n      .get()\r\n      .then(async querySnapshot => {\r\n        return await querySnapshot.data().Avail;\r\n      }),\r\n    DetailAvail_ltd: await docRef\r\n      .doc(state.id)\r\n      .get()\r\n      .then(async querySnapshot => {\r\n        return await querySnapshot.data().DetailAvail_ltd;\r\n      })\r\n  });\r\n};\r\n\r\nconst update = async (state, push) => {\r\n  state.all.map(async i => {\r\n    return await docRef\r\n      .doc(state.item[i].id)\r\n      .update('Avail', state.item[i].totavail - state.item[i].req)\r\n      .then(push('/'));\r\n  });\r\n};\r\n\r\nexport { fetch, update, add, fetchDetailAvail, addnew, remove };\r\n"]},"metadata":{},"sourceType":"module"}