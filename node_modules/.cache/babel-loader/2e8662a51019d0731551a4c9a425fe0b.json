{"ast":null,"code":"import _objectSpread from \"D:\\\\firebase-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAMXvz4AD4bx1NvJchOugf1uYvPhf8xBiA',\n  authDomain: 'test-1528871171306.firebaseapp.com',\n  databaseURL: 'https://test-1528871171306.firebaseio.com',\n  projectId: 'test-1528871171306',\n  storageBucket: 'test-1528871171306.appspot.com',\n  messagingSenderId: '791882157170',\n  appId: '1:791882157170:web:093a1485e8da828a'\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nvar firestore = firebase.firestore();\nconst docRef = firestore.collection('Products');\n\nconst fetch = async () => {\n  return await docRef.get().then(async querySnapshot => {\n    return await querySnapshot;\n  }).catch(err => {\n    console.error('Error Occured', err);\n    return err;\n  });\n};\n\nconst addnew = async (state, push) => {\n  let data = {\n    Avail: state.Avail,\n    DetailAvail_ltd: {\n      [new Date().toDateString().slice(4)]: state.Avail\n    },\n    Name: state.Name,\n    Price: state.Price,\n    Wnt_ltd: state.wanted,\n    pcs_per_Box: state.perBox\n  };\n  await docRef.push(data);\n  await push('/');\n};\n\nconst remove = async (state, date) => {\n  let b = await docRef.doc(state.id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  });\n  let q = await Object.assign({}, b, _objectSpread({}, b, {\n    Avail: b.Avail - b.DetailAvail_ltd[date]\n  }));\n  delete q.DetailAvail_ltd[Object.keys(q.DetailAvail_ltd)];\n  await docRef.doc(state.id).update('Avail', q.Avail);\n  await docRef.doc(state.id).update('DetailAvail_ltd', q.DetailAvail_ltd);\n  return await Object.assign({}, state, _objectSpread({}, state, {\n    num: 0,\n    Price: await q.Price,\n    DetailAvail_ltd: await q.DetailAvail_ltd,\n    Avail: await q.Avail\n  }));\n};\n\nconst fetchDetailAvail = async id => {\n  return await docRef.doc(id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  });\n};\n\nconst add = async state => {\n  let a = await docRef.doc(state.id).get().then(async querySnapshot => {\n    return await querySnapshot.data().Avail;\n  });\n  let data = {\n    [state.date]: state.num\n  };\n  let b = await docRef.doc(state.id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  });\n  let bDetailAvail_ltd = b.DetailAvail_ltd;\n\n  if (Object.keys(bDetailAvail_ltd).length === 5) {\n    let ele = Object.keys(bDetailAvail_ltd)[4];\n    delete bDetailAvail_ltd[ele];\n  }\n\n  bDetailAvail_ltd = Object.assign({}, bDetailAvail_ltd, _objectSpread({}, data, bDetailAvail_ltd));\n  await docRef.doc(state.id).update('DetailAvail_ltd', bDetailAvail_ltd);\n  await docRef.doc(state.id).update('Avail', a + +state.num);\n  await docRef.doc(state.id).update('Wnt_ltd', state.wanted);\n  await docRef.doc(state.id).update('perBox', state.perBox);\n  return await Object.assign({}, state, {\n    Price: await docRef.doc(state.id).get().then(async querySnapshot => {\n      return await querySnapshot.data().Price;\n    }),\n    num: 0,\n    Avail: await docRef.doc(state.id).get().then(async querySnapshot => {\n      return await querySnapshot.data().Avail;\n    }),\n    DetailAvail_ltd: await docRef.doc(state.id).get().then(async querySnapshot => {\n      return await querySnapshot.data().DetailAvail_ltd;\n    })\n  });\n};\n\nconst update = async (props, state) => {\n  props && console.log(props);\n  state && (await state.items.map(async i => {\n    return await docRef.doc(state.selected_items[i].id).update('Avail', state.selected_items[i].totavail - state.selected_items[i].req);\n  }));\n};\n\nexport { fetch, update, add, fetchDetailAvail, addnew, remove };","map":{"version":3,"sources":["D:\\firebase-app\\src\\Fetches\\Fetches.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","firestore","docRef","collection","fetch","get","then","querySnapshot","catch","err","console","error","addnew","state","push","data","Avail","DetailAvail_ltd","Date","toDateString","slice","Name","Price","Wnt_ltd","wanted","pcs_per_Box","perBox","remove","date","b","doc","id","q","Object","assign","keys","update","num","fetchDetailAvail","add","a","bDetailAvail_ltd","length","ele","props","log","items","map","i","selected_items","totavail","req"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,oCAFO;AAGnBC,EAAAA,WAAW,EAAE,2CAHM;AAInBC,EAAAA,SAAS,EAAE,oBAJQ;AAKnBC,EAAAA,aAAa,EAAE,gCALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAArB,C,CASA;;AACAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;AACA,IAAIS,SAAS,GAAGV,QAAQ,CAACU,SAAT,EAAhB;AACA,MAAMC,MAAM,GAAGD,SAAS,CAACE,UAAV,CAAqB,UAArB,CAAf;;AAEA,MAAMC,KAAK,GAAG,YAAY;AACxB,SAAO,MAAMF,MAAM,CAChBG,GADU,GAEVC,IAFU,CAEL,MAAMC,aAAN,IAAuB;AAC3B,WAAO,MAAMA,aAAb;AACD,GAJU,EAKVC,KALU,CAKJC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAc,eAAd,EAA+BF,GAA/B;AACA,WAAOA,GAAP;AACD,GARU,CAAb;AASD,CAVD;;AAYA,MAAMG,MAAM,GAAG,OAAOC,KAAP,EAAcC,IAAd,KAAuB;AACpC,MAAIC,IAAI,GAAG;AACTC,IAAAA,KAAK,EAAEH,KAAK,CAACG,KADJ;AAETC,IAAAA,eAAe,EAAE;AAAE,OAAC,IAAIC,IAAJ,GAAWC,YAAX,GAA0BC,KAA1B,CAAgC,CAAhC,CAAD,GAAsCP,KAAK,CAACG;AAA9C,KAFR;AAGTK,IAAAA,IAAI,EAAER,KAAK,CAACQ,IAHH;AAITC,IAAAA,KAAK,EAAET,KAAK,CAACS,KAJJ;AAKTC,IAAAA,OAAO,EAAEV,KAAK,CAACW,MALN;AAMTC,IAAAA,WAAW,EAAEZ,KAAK,CAACa;AANV,GAAX;AAQA,QAAMxB,MAAM,CAACY,IAAP,CAAYC,IAAZ,CAAN;AACA,QAAMD,IAAI,CAAC,GAAD,CAAV;AACD,CAXD;;AAYA,MAAMa,MAAM,GAAG,OAAOd,KAAP,EAAce,IAAd,KAAuB;AACpC,MAAIC,CAAC,GAAG,MAAM3B,MAAM,CACjB4B,GADW,CACPjB,KAAK,CAACkB,EADC,EAEX1B,GAFW,GAGXC,IAHW,CAGN,MAAMC,aAAN,IAAuB;AAC3B,WAAO,MAAMA,aAAa,CAACQ,IAAd,EAAb;AACD,GALW,CAAd;AAMA,MAAIiB,CAAC,GAAG,MAAMC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,CAAlB,oBACTA,CADS;AAEZb,IAAAA,KAAK,EAAEa,CAAC,CAACb,KAAF,GAAUa,CAAC,CAACZ,eAAF,CAAkBW,IAAlB;AAFL,KAAd;AAIA,SAAOI,CAAC,CAACf,eAAF,CAAkBgB,MAAM,CAACE,IAAP,CAAYH,CAAC,CAACf,eAAd,CAAlB,CAAP;AACA,QAAMf,MAAM,CAAC4B,GAAP,CAAWjB,KAAK,CAACkB,EAAjB,EAAqBK,MAArB,CAA4B,OAA5B,EAAqCJ,CAAC,CAAChB,KAAvC,CAAN;AACA,QAAMd,MAAM,CAAC4B,GAAP,CAAWjB,KAAK,CAACkB,EAAjB,EAAqBK,MAArB,CAA4B,iBAA5B,EAA+CJ,CAAC,CAACf,eAAjD,CAAN;AACA,SAAO,MAAMgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBrB,KAAlB,oBACRA,KADQ;AAEXwB,IAAAA,GAAG,EAAE,CAFM;AAGXf,IAAAA,KAAK,EAAE,MAAMU,CAAC,CAACV,KAHJ;AAIXL,IAAAA,eAAe,EAAE,MAAMe,CAAC,CAACf,eAJd;AAKXD,IAAAA,KAAK,EAAE,MAAMgB,CAAC,CAAChB;AALJ,KAAb;AAOD,CArBD;;AAsBA,MAAMsB,gBAAgB,GAAG,MAAMP,EAAN,IAAY;AACnC,SAAO,MAAM7B,MAAM,CAChB4B,GADU,CACNC,EADM,EAEV1B,GAFU,GAGVC,IAHU,CAGL,MAAMC,aAAN,IAAuB;AAC3B,WAAO,MAAMA,aAAa,CAACQ,IAAd,EAAb;AACD,GALU,CAAb;AAMD,CAPD;;AASA,MAAMwB,GAAG,GAAG,MAAM1B,KAAN,IAAe;AACzB,MAAI2B,CAAC,GAAG,MAAMtC,MAAM,CACjB4B,GADW,CACPjB,KAAK,CAACkB,EADC,EAEX1B,GAFW,GAGXC,IAHW,CAGN,MAAMC,aAAN,IAAuB;AAC3B,WAAO,MAAMA,aAAa,CAACQ,IAAd,GAAqBC,KAAlC;AACD,GALW,CAAd;AAMA,MAAID,IAAI,GAAG;AAAE,KAACF,KAAK,CAACe,IAAP,GAAcf,KAAK,CAACwB;AAAtB,GAAX;AACA,MAAIR,CAAC,GAAG,MAAM3B,MAAM,CACjB4B,GADW,CACPjB,KAAK,CAACkB,EADC,EAEX1B,GAFW,GAGXC,IAHW,CAGN,MAAMC,aAAN,IAAuB;AAC3B,WAAO,MAAMA,aAAa,CAACQ,IAAd,EAAb;AACD,GALW,CAAd;AAMA,MAAI0B,gBAAgB,GAAGZ,CAAC,CAACZ,eAAzB;;AACA,MAAIgB,MAAM,CAACE,IAAP,CAAYM,gBAAZ,EAA8BC,MAA9B,KAAyC,CAA7C,EAAgD;AAC9C,QAAIC,GAAG,GAAGV,MAAM,CAACE,IAAP,CAAYM,gBAAZ,EAA8B,CAA9B,CAAV;AACA,WAAOA,gBAAgB,CAACE,GAAD,CAAvB;AACD;;AACDF,EAAAA,gBAAgB,GAAGR,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBO,gBAAlB,oBACd1B,IADc,EAEd0B,gBAFc,EAAnB;AAIA,QAAMvC,MAAM,CAAC4B,GAAP,CAAWjB,KAAK,CAACkB,EAAjB,EAAqBK,MAArB,CAA4B,iBAA5B,EAA+CK,gBAA/C,CAAN;AACA,QAAMvC,MAAM,CAAC4B,GAAP,CAAWjB,KAAK,CAACkB,EAAjB,EAAqBK,MAArB,CAA4B,OAA5B,EAAqCI,CAAC,GAAG,CAAC3B,KAAK,CAACwB,GAAhD,CAAN;AACA,QAAMnC,MAAM,CAAC4B,GAAP,CAAWjB,KAAK,CAACkB,EAAjB,EAAqBK,MAArB,CAA4B,SAA5B,EAAuCvB,KAAK,CAACW,MAA7C,CAAN;AACA,QAAMtB,MAAM,CAAC4B,GAAP,CAAWjB,KAAK,CAACkB,EAAjB,EAAqBK,MAArB,CAA4B,QAA5B,EAAsCvB,KAAK,CAACa,MAA5C,CAAN;AACA,SAAO,MAAMO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBrB,KAAlB,EAAyB;AACpCS,IAAAA,KAAK,EAAE,MAAMpB,MAAM,CAChB4B,GADU,CACNjB,KAAK,CAACkB,EADA,EAEV1B,GAFU,GAGVC,IAHU,CAGL,MAAMC,aAAN,IAAuB;AAC3B,aAAO,MAAMA,aAAa,CAACQ,IAAd,GAAqBO,KAAlC;AACD,KALU,CADuB;AAOpCe,IAAAA,GAAG,EAAE,CAP+B;AAQpCrB,IAAAA,KAAK,EAAE,MAAMd,MAAM,CAChB4B,GADU,CACNjB,KAAK,CAACkB,EADA,EAEV1B,GAFU,GAGVC,IAHU,CAGL,MAAMC,aAAN,IAAuB;AAC3B,aAAO,MAAMA,aAAa,CAACQ,IAAd,GAAqBC,KAAlC;AACD,KALU,CARuB;AAcpCC,IAAAA,eAAe,EAAE,MAAMf,MAAM,CAC1B4B,GADoB,CAChBjB,KAAK,CAACkB,EADU,EAEpB1B,GAFoB,GAGpBC,IAHoB,CAGf,MAAMC,aAAN,IAAuB;AAC3B,aAAO,MAAMA,aAAa,CAACQ,IAAd,GAAqBE,eAAlC;AACD,KALoB;AAda,GAAzB,CAAb;AAqBD,CAhDD;;AAkDA,MAAMmB,MAAM,GAAG,OAAOQ,KAAP,EAAc/B,KAAd,KAAwB;AACrC+B,EAAAA,KAAK,IAAIlC,OAAO,CAACmC,GAAR,CAAYD,KAAZ,CAAT;AACA/B,EAAAA,KAAK,KACF,MAAMA,KAAK,CAACiC,KAAN,CAAYC,GAAZ,CAAgB,MAAMC,CAAN,IAAW;AAChC,WAAO,MAAM9C,MAAM,CAChB4B,GADU,CACNjB,KAAK,CAACoC,cAAN,CAAqBD,CAArB,EAAwBjB,EADlB,EAEVK,MAFU,CAGT,OAHS,EAITvB,KAAK,CAACoC,cAAN,CAAqBD,CAArB,EAAwBE,QAAxB,GAAmCrC,KAAK,CAACoC,cAAN,CAAqBD,CAArB,EAAwBG,GAJlD,CAAb;AAMD,GAPM,CADJ,CAAL;AASD,CAXD;;AAaA,SAAS/C,KAAT,EAAgBgC,MAAhB,EAAwBG,GAAxB,EAA6BD,gBAA7B,EAA+C1B,MAA/C,EAAuDe,MAAvD","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyAMXvz4AD4bx1NvJchOugf1uYvPhf8xBiA',\r\n  authDomain: 'test-1528871171306.firebaseapp.com',\r\n  databaseURL: 'https://test-1528871171306.firebaseio.com',\r\n  projectId: 'test-1528871171306',\r\n  storageBucket: 'test-1528871171306.appspot.com',\r\n  messagingSenderId: '791882157170',\r\n  appId: '1:791882157170:web:093a1485e8da828a'\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nvar firestore = firebase.firestore();\r\nconst docRef = firestore.collection('Products');\r\n\r\nconst fetch = async () => {\r\n  return await docRef\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot;\r\n    })\r\n    .catch(err => {\r\n      console.error('Error Occured', err);\r\n      return err;\r\n    });\r\n};\r\n\r\nconst addnew = async (state, push) => {\r\n  let data = {\r\n    Avail: state.Avail,\r\n    DetailAvail_ltd: { [new Date().toDateString().slice(4)]: state.Avail },\r\n    Name: state.Name,\r\n    Price: state.Price,\r\n    Wnt_ltd: state.wanted,\r\n    pcs_per_Box: state.perBox\r\n  };\r\n  await docRef.push(data);\r\n  await push('/');\r\n};\r\nconst remove = async (state, date) => {\r\n  let b = await docRef\r\n    .doc(state.id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n  let q = await Object.assign({}, b, {\r\n    ...b,\r\n    Avail: b.Avail - b.DetailAvail_ltd[date]\r\n  });\r\n  delete q.DetailAvail_ltd[Object.keys(q.DetailAvail_ltd)];\r\n  await docRef.doc(state.id).update('Avail', q.Avail);\r\n  await docRef.doc(state.id).update('DetailAvail_ltd', q.DetailAvail_ltd);\r\n  return await Object.assign({}, state, {\r\n    ...state,\r\n    num: 0,\r\n    Price: await q.Price,\r\n    DetailAvail_ltd: await q.DetailAvail_ltd,\r\n    Avail: await q.Avail\r\n  });\r\n};\r\nconst fetchDetailAvail = async id => {\r\n  return await docRef\r\n    .doc(id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n};\r\n\r\nconst add = async state => {\r\n  let a = await docRef\r\n    .doc(state.id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data().Avail;\r\n    });\r\n  let data = { [state.date]: state.num };\r\n  let b = await docRef\r\n    .doc(state.id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n  let bDetailAvail_ltd = b.DetailAvail_ltd;\r\n  if (Object.keys(bDetailAvail_ltd).length === 5) {\r\n    let ele = Object.keys(bDetailAvail_ltd)[4];\r\n    delete bDetailAvail_ltd[ele];\r\n  }\r\n  bDetailAvail_ltd = Object.assign({}, bDetailAvail_ltd, {\r\n    ...data,\r\n    ...bDetailAvail_ltd\r\n  });\r\n  await docRef.doc(state.id).update('DetailAvail_ltd', bDetailAvail_ltd);\r\n  await docRef.doc(state.id).update('Avail', a + +state.num);\r\n  await docRef.doc(state.id).update('Wnt_ltd', state.wanted);\r\n  await docRef.doc(state.id).update('perBox', state.perBox);\r\n  return await Object.assign({}, state, {\r\n    Price: await docRef\r\n      .doc(state.id)\r\n      .get()\r\n      .then(async querySnapshot => {\r\n        return await querySnapshot.data().Price;\r\n      }),\r\n    num: 0,\r\n    Avail: await docRef\r\n      .doc(state.id)\r\n      .get()\r\n      .then(async querySnapshot => {\r\n        return await querySnapshot.data().Avail;\r\n      }),\r\n    DetailAvail_ltd: await docRef\r\n      .doc(state.id)\r\n      .get()\r\n      .then(async querySnapshot => {\r\n        return await querySnapshot.data().DetailAvail_ltd;\r\n      })\r\n  });\r\n};\r\n\r\nconst update = async (props, state) => {\r\n  props && console.log(props);\r\n  state &&\r\n    (await state.items.map(async i => {\r\n      return await docRef\r\n        .doc(state.selected_items[i].id)\r\n        .update(\r\n          'Avail',\r\n          state.selected_items[i].totavail - state.selected_items[i].req\r\n        );\r\n    }));\r\n};\r\n\r\nexport { fetch, update, add, fetchDetailAvail, addnew, remove };\r\n"]},"metadata":{},"sourceType":"module"}