{"ast":null,"code":"import _objectSpread from \"D:\\\\firebase-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\firebase-app\\\\src\\\\Components\\\\Pages\\\\Dashboard.js\";\nimport React from 'react';\nimport { fetch } from '../../Fetches';\nimport Homepage from '../Layouts/Homepage';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.check = () => {\n      this.fetchData();\n    };\n\n    this.fetchData = async () => {\n      let a = await fetch();\n      await console.log('fetch_over');\n      await a.forEach(async doc => {\n        await this.state.products.push(_objectSpread({}, doc.data(), {\n          id: doc.id\n        }));\n      });\n      (await this.state.products.length) !== 0 && this.setState({\n        isloading: ''\n      });\n      let srt = await this.state.products.sort((a, b) => a.Avail - b.Avail);\n      await this.setState({\n        products: srt\n      });\n      (await a.size) === 0 && this.setState({\n        isloading: 'serverError'\n      });\n      (await this.state.isloading) === 'serverError' && this.check();\n    };\n\n    this.one = async e => {\n      let _e$target = e.target,\n          value = _e$target.value,\n          id = _e$target.id;\n\n      if (this.state.selected_items[id].req + value > this.state.selected_items[id].Avail) {\n        alert('Quantity Exceeded');\n      } else if (this.state.selected_items[id].req + value > 0) {\n        let a = Object.assign({}, this.state.selected_items, _objectSpread({}, this.state.selected_items, {\n          [name]: _objectSpread({}, this.state.selected_items[name], {\n            req: this.state.selected_items[name].req + num,\n            totPrice: +this.state.products.filter(i => i.Name === name).map(i => i.Price)[0] * (this.state.selected_items[name].req + num)\n          })\n        }));\n        await this.setState({\n          selected_items: a\n        });\n        await this.tot();\n      } // if (\n      //   this.state.selected_items[name].req + num >\n      //   this.state.products.filter(i => i.Name === name).map(i => i.Avail)[0]\n      // ) {\n      //   alert('Quantity Exceeded');\n      // } else if (!(this.state.selected_items[name].req + num < 0)) {\n      //   if (this.state.selected_items[name].req + num === 0) {\n      //     this.delete(e);\n      //   }\n      //   let a = Object.assign({}, this.state.selected_items, {\n      //   ...this.state.selected_items,\n      //   [name]: {\n      //     ...this.state.selected_items[name],\n      //     req: this.state.selected_items[name].req + num,\n      //     totPrice:\n      //       +this.state.products\n      //         .filter(i => i.Name === name)\n      //         .map(i => i.Price)[0] *\n      //       (this.state.selected_items[name].req + num)\n      //   }\n      // });\n      // await this.setState({ selected_items: a });\n      // await this.tot();\n      // }\n\n    };\n\n    this.add = async e => {\n      let a = await e.target.id;\n      let item = await this.state.products.filter(i => i.Name === a);\n\n      if (a !== '' && item[0].Avail > 0) {\n        if (!this.state.items.includes(a)) {\n          this.setState(prev => {\n            return {\n              selected_items: _objectSpread({}, prev.selected_items, {\n                [a]: {\n                  req: 1,\n                  totavail: +item.map(i => i.Avail)[0],\n                  id: this.state.products.filter(i => i.Name === a).map(i => i.id)[0],\n                  totPrice: +item.map(i => i.Price)[0],\n                  price: +item.map(i => i.Price)[0]\n                }\n              })\n            };\n          });\n          await this.setState({\n            items: [...this.state.items, a]\n          });\n          await this.tot();\n          await this.setState({\n            list: []\n          });\n        }\n      } else alert('select valid product');\n    };\n\n    this.tot = () => {\n      let a = this.state.items.length !== 0 ? this.state.items.map(i => {\n        return this.state.selected_items[i].totPrice;\n      }).reduce(this.summation) : 0;\n      this.setState({\n        totPrice: a\n      });\n    };\n\n    this.delete = async e => {\n      let name = e.target.id;\n      let res = Object.assign({}, this.state.selected_items);\n      delete res[name];\n      await this.setState({\n        items: this.state.items.filter(i => i !== name)\n      });\n      await this.setState({\n        selected_items: res\n      });\n      await this.tot();\n    };\n\n    this.summation = (a, b) => a + b;\n\n    this.search = e => {\n      let list = [];\n      this.state.products.filter(i => i.Name.toLowerCase().includes(e.target.value)).map(i => {\n        return list.push(i);\n      });\n      e.target.value.length !== 0 && this.setState({\n        list: list\n      });\n      e.target.value.length === 0 && this.setState({\n        list: []\n      });\n    };\n\n    this.state = {\n      products: [],\n      selected_items: [],\n      items: [],\n      totPrice: 0,\n      isloading: 'Loading...',\n      list: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.location.state && this.setState({\n      selected_items: this.props.location.state.selected_items,\n      items: this.props.location.state.items,\n      totPrice: this.props.location.state.totPrice\n    });\n    this.fetchData();\n  }\n\n  render() {\n    return React.createElement(Homepage, {\n      state: this.state,\n      add: this.add,\n      tot: this.tot,\n      delete: this.delete,\n      one: this.one,\n      search: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["D:\\firebase-app\\src\\Components\\Pages\\Dashboard.js"],"names":["React","fetch","Homepage","Dashboard","Component","constructor","props","check","fetchData","a","console","log","forEach","doc","state","products","push","data","id","length","setState","isloading","srt","sort","b","Avail","size","one","e","target","value","selected_items","req","alert","Object","assign","name","num","totPrice","filter","i","Name","map","Price","tot","add","item","items","includes","prev","totavail","price","list","reduce","summation","delete","res","search","toLowerCase","componentDidMount","location","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { fetch } from '../../Fetches';\r\nimport Homepage from '../Layouts/Homepage';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [],\r\n      selected_items: [],\r\n      items: [],\r\n      totPrice: 0,\r\n      isloading: 'Loading...',\r\n      list: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.location.state &&\r\n      this.setState({\r\n        selected_items: this.props.location.state.selected_items,\r\n        items: this.props.location.state.items,\r\n        totPrice: this.props.location.state.totPrice\r\n      });\r\n    this.fetchData();\r\n  }\r\n  check = () => {\r\n    this.fetchData();\r\n  };\r\n  fetchData = async () => {\r\n    let a = await fetch();\r\n    await console.log('fetch_over');\r\n    await a.forEach(async doc => {\r\n      await this.state.products.push({ ...doc.data(), id: doc.id });\r\n    });\r\n    (await this.state.products.length) !== 0 &&\r\n      this.setState({ isloading: '' });\r\n    let srt = await this.state.products.sort((a, b) => a.Avail - b.Avail);\r\n    await this.setState({ products: srt });\r\n    (await a.size) === 0 && this.setState({ isloading: 'serverError' });\r\n    (await this.state.isloading) === 'serverError' && this.check();\r\n  };\r\n  one = async e => {\r\n    let { value, id } = e.target;\r\n    if (\r\n      this.state.selected_items[id].req + value >\r\n      this.state.selected_items[id].Avail\r\n    ) {\r\n      alert('Quantity Exceeded');\r\n    } else if (this.state.selected_items[id].req + value > 0) {\r\n      let a = Object.assign({}, this.state.selected_items, {\r\n        ...this.state.selected_items,\r\n        [name]: {\r\n          ...this.state.selected_items[name],\r\n          req: this.state.selected_items[name].req + num,\r\n          totPrice:\r\n            +this.state.products\r\n              .filter(i => i.Name === name)\r\n              .map(i => i.Price)[0] *\r\n            (this.state.selected_items[name].req + num)\r\n        }\r\n      });\r\n      await this.setState({ selected_items: a });\r\n      await this.tot();\r\n    }\r\n    // if (\r\n    //   this.state.selected_items[name].req + num >\r\n    //   this.state.products.filter(i => i.Name === name).map(i => i.Avail)[0]\r\n    // ) {\r\n    //   alert('Quantity Exceeded');\r\n    // } else if (!(this.state.selected_items[name].req + num < 0)) {\r\n    //   if (this.state.selected_items[name].req + num === 0) {\r\n    //     this.delete(e);\r\n    //   }\r\n    //   let a = Object.assign({}, this.state.selected_items, {\r\n    //   ...this.state.selected_items,\r\n    //   [name]: {\r\n    //     ...this.state.selected_items[name],\r\n    //     req: this.state.selected_items[name].req + num,\r\n    //     totPrice:\r\n    //       +this.state.products\r\n    //         .filter(i => i.Name === name)\r\n    //         .map(i => i.Price)[0] *\r\n    //       (this.state.selected_items[name].req + num)\r\n    //   }\r\n    // });\r\n    // await this.setState({ selected_items: a });\r\n    // await this.tot();\r\n    // }\r\n  };\r\n  add = async e => {\r\n    let a = await e.target.id;\r\n    let item = await this.state.products.filter(i => i.Name === a);\r\n    if (a !== '' && item[0].Avail > 0) {\r\n      if (!this.state.items.includes(a)) {\r\n        this.setState(prev => {\r\n          return {\r\n            selected_items: {\r\n              ...prev.selected_items,\r\n              [a]: {\r\n                req: 1,\r\n                totavail: +item.map(i => i.Avail)[0],\r\n                id: this.state.products\r\n                  .filter(i => i.Name === a)\r\n                  .map(i => i.id)[0],\r\n                totPrice: +item.map(i => i.Price)[0],\r\n                price: +item.map(i => i.Price)[0]\r\n              }\r\n            }\r\n          };\r\n        });\r\n        await this.setState({\r\n          items: [...this.state.items, a]\r\n        });\r\n        await this.tot();\r\n        await this.setState({ list: [] });\r\n      }\r\n    } else alert('select valid product');\r\n  };\r\n  tot = () => {\r\n    let a =\r\n      this.state.items.length !== 0\r\n        ? this.state.items\r\n            .map(i => {\r\n              return this.state.selected_items[i].totPrice;\r\n            })\r\n            .reduce(this.summation)\r\n        : 0;\r\n    this.setState({ totPrice: a });\r\n  };\r\n  delete = async e => {\r\n    let name = e.target.id;\r\n    let res = Object.assign({}, this.state.selected_items);\r\n    delete res[name];\r\n    await this.setState({ items: this.state.items.filter(i => i !== name) });\r\n    await this.setState({ selected_items: res });\r\n    await this.tot();\r\n  };\r\n  summation = (a, b) => a + b;\r\n  search = e => {\r\n    let list = [];\r\n    this.state.products\r\n      .filter(i => i.Name.toLowerCase().includes(e.target.value))\r\n      .map(i => {\r\n        return list.push(i);\r\n      });\r\n    e.target.value.length !== 0 && this.setState({ list: list });\r\n    e.target.value.length === 0 && this.setState({ list: [] });\r\n  };\r\n  render() {\r\n    return (\r\n      <Homepage\r\n        state={this.state}\r\n        add={this.add}\r\n        tot={this.tot}\r\n        delete={this.delete}\r\n        one={this.one}\r\n        search={this.search}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}