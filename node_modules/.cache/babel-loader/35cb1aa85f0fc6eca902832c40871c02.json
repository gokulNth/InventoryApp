{"ast":null,"code":"import _objectSpread from \"D:\\\\firebase-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\firebase-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { fetch } from \"./Fetches\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchData = async () => {\n      let a = await fetch();\n      await console.log(\"fetch_over\");\n      await a.forEach(async doc => {\n        await this.state.products.push(doc.data());\n      });\n      this.state.products && this.setState({\n        isloading: \"Done\"\n      });\n    };\n\n    this.add = e => {\n      console.log(\"Adding...\", e.target.id);\n      let a = e.target.id;\n\n      if (!this.state.items.includes(a)) {\n        this.setState(prev => {\n          return {\n            selected_items: _objectSpread({}, prev.selected_items, {\n              [a]: 1\n            }),\n            items: [...prev.items, a]\n          };\n        });\n      }\n    };\n\n    this.change = e => {\n      this.setState({\n        selected_items: _objectSpread({}, this.state.selected_items, {\n          [e.target.name]: +e.target.value\n        })\n      });\n      this.setState(prev => {\n        return {};\n      });\n    };\n\n    this.Billing = () => {\n      console.log(this.state.selected_items);\n    };\n\n    this.pricechange = e => {\n      console.log(e.target.value);\n    };\n\n    this.state = {\n      products: [],\n      selected_items: [],\n      items: [],\n      total: 0,\n      isloading: \"Loading....\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12 m6 l8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, console.log(this.state), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.isloading), this.state.isloading === \"Done\" && this.state.products.map(i => {\n      return React.createElement(\"div\", {\n        onClick: this.add,\n        id: i.Name,\n        key: i.Name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, i.Name, \" \", i.Avail, \" @\", i.Price);\n    })), React.createElement(\"div\", {\n      className: \"col s12 m6 l4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Selected Items\", this.state.items && this.state.items.map(i => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, i, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"helper-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Requirement\"), React.createElement(\"input\", {\n        name: i,\n        type: \"number\",\n        size: \"2\",\n        value: this.state.selected_items[i],\n        onChange: this.change,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-field col s6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"helper-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Total Price\"), React.createElement(\"input\", {\n        name: i,\n        type: \"number\",\n        size: \"2\",\n        value: this.state.selected_items[i] * this.state.products.filter(j => j.Name === i).map(i => i.Price),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))));\n    }), this.state.selected_items.length === 0 ? null : React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"col s3\",\n      onClick: this.Billing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Bill it\"), React.createElement(\"span\", {\n      className: \"col s9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.total))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\firebase-app\\src\\App.js"],"names":["React","fetch","App","Component","constructor","fetchData","a","console","log","forEach","doc","state","products","push","data","setState","isloading","add","e","target","id","items","includes","prev","selected_items","change","name","value","Billing","pricechange","total","componentDidMount","render","map","i","Name","Avail","Price","filter","j","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { fetch } from \"./Fetches\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      selected_items: [],\n      items: [],\n      total: 0,\n      isloading: \"Loading....\"\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  fetchData = async () => {\n    let a = await fetch();\n    await console.log(\"fetch_over\");\n    await a.forEach(async doc => {\n      await this.state.products.push(doc.data());\n    });\n    this.state.products && this.setState({ isloading: \"Done\" });\n  };\n  add = e => {\n    console.log(\"Adding...\", e.target.id);\n    let a = e.target.id;\n    if (!this.state.items.includes(a)) {\n      this.setState(prev => {\n        return {\n          selected_items: { ...prev.selected_items, [a]: 1 },\n          items: [...prev.items, a]\n        };\n      });\n    }\n  };\n  change = e => {\n    this.setState(\n      {\n        selected_items: {\n          ...this.state.selected_items,\n          [e.target.name]: +e.target.value\n        }\n      }\n    );\n    this.setState(prev => {\n      return{\n        \n      }\n    })\n  };\n  Billing = () => {\n    console.log(this.state.selected_items);\n  };\n  pricechange = e => {\n    console.log(e.target.value);\n  };\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col s12 m6 l8\">\n          {console.log(this.state)}\n          <h5>{this.state.isloading}</h5>\n          {this.state.isloading === \"Done\" &&\n            this.state.products.map(i => {\n              return (\n                <div onClick={this.add} id={i.Name} key={i.Name}>\n                  {i.Name} {i.Avail} @{i.Price}\n                </div>\n              );\n            })}\n        </div>\n        <div className=\"col s12 m6 l4\">\n          Selected Items\n          {this.state.items &&\n            this.state.items.map(i => {\n              return (\n                <div key={i}>\n                  {i}\n                  <div className=\"row\">\n                    <div className=\"input-field col s6\">\n                      <span className=\"helper-text\">Requirement</span>\n                      <input\n                        name={i}\n                        type=\"number\"\n                        size=\"2\"\n                        value={this.state.selected_items[i]}\n                        onChange={this.change}\n                      />\n                    </div>\n                    <div className=\"input-field col s6\">\n                      <span className=\"helper-text\">Total Price</span>\n                      <input\n                        name={i}\n                        type=\"number\"\n                        size=\"2\"\n                        value={\n                          this.state.selected_items[i] *\n                          this.state.products\n                            .filter(j => j.Name === i)\n                            .map(i => i.Price)\n                        }\n                      />\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          {this.state.selected_items.length === 0 ? null : (\n            <div className=\"row\">\n              <button className=\"col s3\" onClick={this.Billing}>\n                Bill it\n              </button>\n              <span className=\"col s9\">{this.state.total}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}