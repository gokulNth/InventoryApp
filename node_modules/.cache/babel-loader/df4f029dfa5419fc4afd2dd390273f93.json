{"ast":null,"code":"import _objectSpread from \"D:\\\\firebase-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase';\nimport { generate } from 'shortid';\nimport { addBill } from './Queries';\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAMXvz4AD4bx1NvJchOugf1uYvPhf8xBiA',\n  authDomain: 'test-1528871171306.firebaseapp.com',\n  databaseURL: 'https://test-1528871171306.firebaseio.com',\n  projectId: 'test-1528871171306',\n  storageBucket: 'test-1528871171306.appspot.com',\n  messagingSenderId: '791882157170',\n  appId: '1:791882157170:web:093a1485e8da828a'\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nvar firestore = firebase.firestore();\nconst docRef = firestore.collection('Products');\n\nconst fetch = async () => {\n  return await docRef.get().then(async querySnapshot => {\n    return await querySnapshot;\n  }).catch(err => {\n    console.error('Error Occured', err);\n    return err;\n  });\n};\n\nconst addnew = async (state, push) => {\n  let data = {\n    Avail: state.Avail,\n    DetailAvail_ltd: {\n      [new Date().toDateString().slice(4)]: state.Avail\n    },\n    Name: state.Name,\n    Price: state.Price,\n    Wnt_ltd: state.wanted,\n    pcs_per_Box: state.perBox,\n    MRP: state.MRP\n  };\n  await docRef.doc(generate()).set(data);\n  await push('/');\n};\n\nconst remove = async (state, date) => {\n  let b = await docRef.doc(state.id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  });\n  let q = await Object.assign({}, b, _objectSpread({}, b, {\n    Avail: b.Avail - b.DetailAvail_ltd[date]\n  }));\n  Object.keys(q.DetailAvail_ltd).filter(i => i === state.date).map(i => delete q.DetailAvail_ltd[i]);\n  await docRef.doc(state.id).update('Avail', q.Avail);\n  await docRef.doc(state.id).update('DetailAvail_ltd', q.DetailAvail_ltd);\n  return await Object.assign({}, state, _objectSpread({}, state, {\n    num: 0,\n    Price: await q.Price,\n    DetailAvail_ltd: await q.DetailAvail_ltd,\n    Avail: await q.Avail\n  }));\n};\n\nconst fetchDetailAvail = async id => {\n  return await docRef.doc(id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  });\n};\n\nconst add = async state => {\n  if (state.num !== '') {\n    let data = {\n      [state.date]: +state.num\n    };\n    let b = await docRef.doc(state.id).get().then(async querySnapshot => {\n      return await querySnapshot.data();\n    });\n    let bDetailAvail_ltd = b.DetailAvail_ltd;\n\n    if (Object.keys(bDetailAvail_ltd).length === 5) {\n      let ele = Object.keys(bDetailAvail_ltd)[4];\n      delete bDetailAvail_ltd[ele];\n    }\n\n    bDetailAvail_ltd = Object.assign({}, bDetailAvail_ltd, _objectSpread({}, bDetailAvail_ltd, data));\n    await docRef.doc(state.id).update('DetailAvail_ltd', bDetailAvail_ltd);\n    await docRef.doc(state.id).update('Avail', b.Avail + +state.num);\n  }\n\n  await docRef.doc(state.id).update('Wnt_ltd', +state.wanted);\n  await docRef.doc(state.id).update('perBox', +state.perBox);\n  await docRef.doc(state.id).update('MRP', +state.MRP);\n  let new1 = await docRef.doc(state.id).get().then(async querySnapshot => {\n    return await querySnapshot.data();\n  });\n  return await Object.assign({}, state, {\n    Price: new1.Price,\n    num: 0,\n    Avail: new1.Avail,\n    DetailAvail_ltd: new1.DetailAvail_ltd,\n    MRP: new1.MRP\n  });\n};\n\nconst update = async state => {\n  await state.items.map(async i => {\n    return await docRef.doc(state.selected_items[i].id).update('Avail', state.selected_items[i].totavail) //req\n    .then(() => console.log(addBill()));\n  });\n};\n\nexport { fetch, update, add, fetchDetailAvail, addnew, remove };","map":{"version":3,"sources":["D:\\firebase-app\\src\\Fetches\\Fetches.js"],"names":["firebase","generate","addBill","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","firestore","docRef","collection","fetch","get","then","querySnapshot","catch","err","console","error","addnew","state","push","data","Avail","DetailAvail_ltd","Date","toDateString","slice","Name","Price","Wnt_ltd","wanted","pcs_per_Box","perBox","MRP","doc","set","remove","date","b","id","q","Object","assign","keys","filter","i","map","update","num","fetchDetailAvail","add","bDetailAvail_ltd","length","ele","new1","items","selected_items","totavail","log"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\r\nimport { generate } from 'shortid';\r\nimport { addBill } from './Queries';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyAMXvz4AD4bx1NvJchOugf1uYvPhf8xBiA',\r\n  authDomain: 'test-1528871171306.firebaseapp.com',\r\n  databaseURL: 'https://test-1528871171306.firebaseio.com',\r\n  projectId: 'test-1528871171306',\r\n  storageBucket: 'test-1528871171306.appspot.com',\r\n  messagingSenderId: '791882157170',\r\n  appId: '1:791882157170:web:093a1485e8da828a'\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nvar firestore = firebase.firestore();\r\nconst docRef = firestore.collection('Products');\r\n\r\nconst fetch = async () => {\r\n  return await docRef\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot;\r\n    })\r\n    .catch(err => {\r\n      console.error('Error Occured', err);\r\n      return err;\r\n    });\r\n};\r\n\r\nconst addnew = async (state, push) => {\r\n  let data = {\r\n    Avail: state.Avail,\r\n    DetailAvail_ltd: { [new Date().toDateString().slice(4)]: state.Avail },\r\n    Name: state.Name,\r\n    Price: state.Price,\r\n    Wnt_ltd: state.wanted,\r\n    pcs_per_Box: state.perBox,\r\n    MRP: state.MRP\r\n  };\r\n  await docRef.doc(generate()).set(data);\r\n  await push('/');\r\n};\r\nconst remove = async (state, date) => {\r\n  let b = await docRef\r\n    .doc(state.id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n  let q = await Object.assign({}, b, {\r\n    ...b,\r\n    Avail: b.Avail - b.DetailAvail_ltd[date]\r\n  });\r\n  Object.keys(q.DetailAvail_ltd)\r\n    .filter(i => i === state.date)\r\n    .map(i => delete q.DetailAvail_ltd[i]);\r\n  await docRef.doc(state.id).update('Avail', q.Avail);\r\n  await docRef.doc(state.id).update('DetailAvail_ltd', q.DetailAvail_ltd);\r\n  return await Object.assign({}, state, {\r\n    ...state,\r\n    num: 0,\r\n    Price: await q.Price,\r\n    DetailAvail_ltd: await q.DetailAvail_ltd,\r\n    Avail: await q.Avail\r\n  });\r\n};\r\n\r\nconst fetchDetailAvail = async id => {\r\n  return await docRef\r\n    .doc(id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n};\r\n\r\nconst add = async state => {\r\n  if (state.num !== '') {\r\n    let data = { [state.date]: +state.num };\r\n    let b = await docRef\r\n      .doc(state.id)\r\n      .get()\r\n      .then(async querySnapshot => {\r\n        return await querySnapshot.data();\r\n      });\r\n    let bDetailAvail_ltd = b.DetailAvail_ltd;\r\n    if (Object.keys(bDetailAvail_ltd).length === 5) {\r\n      let ele = Object.keys(bDetailAvail_ltd)[4];\r\n      delete bDetailAvail_ltd[ele];\r\n    }\r\n    bDetailAvail_ltd = Object.assign({}, bDetailAvail_ltd, {\r\n      ...bDetailAvail_ltd,\r\n      ...data\r\n    });\r\n    await docRef.doc(state.id).update('DetailAvail_ltd', bDetailAvail_ltd);\r\n    await docRef.doc(state.id).update('Avail', b.Avail + +state.num);\r\n  }\r\n  await docRef.doc(state.id).update('Wnt_ltd', +state.wanted);\r\n  await docRef.doc(state.id).update('perBox', +state.perBox);\r\n  await docRef.doc(state.id).update('MRP', +state.MRP);\r\n  let new1 = await docRef\r\n    .doc(state.id)\r\n    .get()\r\n    .then(async querySnapshot => {\r\n      return await querySnapshot.data();\r\n    });\r\n  return await Object.assign({}, state, {\r\n    Price: new1.Price,\r\n    num: 0,\r\n    Avail: new1.Avail,\r\n    DetailAvail_ltd: new1.DetailAvail_ltd,\r\n    MRP: new1.MRP\r\n  });\r\n};\r\n\r\nconst update = async state => {\r\n  await state.items.map(async i => {\r\n    return await docRef\r\n      .doc(state.selected_items[i].id)\r\n      .update('Avail', state.selected_items[i].totavail) //req\r\n      .then(() => console.log(addBill()));\r\n  });\r\n};\r\n\r\nexport { fetch, update, add, fetchDetailAvail, addnew, remove };\r\n"]},"metadata":{},"sourceType":"module"}